---
type Props = {
  text: string;
  repeats?: number;
  cx?: number;
  cy?: number;
  r?: number;
  class?: string;
};

const {
  text,
  repeats,
  cx = 300,
  cy = 300,
  r = 300,
  class: className,
} = Astro.props;

const style = {
  "--cx": `${cy}px`,
  "--cy": `${cx}px`,
};

const circleText = new Array(repeats)
  .fill(text)
  .reduce((string, segment) => string + segment, "");

const path = `
  M ${cx - r}, ${cy}
  a ${r}, ${r} 0 1, 1 ${r * 2}, 0
  a ${r}, ${r} 0 1, 1 -${r * 2}, 0
`;
---

<div
  style={style}
  class:list={[
    "origin[var(--cx)_var(--cy)] h-[calc(var(--cy)*2)] w-[calc(var(--cx)*2)] animate-text-spin",
    className,
  ]}
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    height={`${cy * 2}px`}
    width={`${cx * 2}px`}
  >
    <defs>
      <path d={path} id="textcircle" stroke-width="25"></path>
    </defs>
    <text
      fill="white"
      dy="20"
      letter-spacing="4"
      class="uppercase"
      font-family="helvetica"
    >
      <textPath xlink:href="#textcircle">{circleText}</textPath>
    </text>
  </svg>
</div>
