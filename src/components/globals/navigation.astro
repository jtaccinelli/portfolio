---
import { client } from "@tina/__generated__/client";
import { Link, parseLinkHref } from "@root/lib/cms";

const { pathname } = Astro.url;

const request = await client.queries.navigation({ relativePath: "index.json" });
const { navigation } = request.data;
---

<div
  class="fixed left-0 right-0 top-0 z-50 flex flex-row flex-wrap items-center justify-between overflow-visible p-4 md:px-8 md:py-16"
>
  <div
    class="mb-4 flex w-full flex-row items-center space-x-1 rounded-full bg-white p-1 shadow md:mb-0 md:w-auto"
  >
    <div class="relative flex w-full flex-row -space-x-2">
      {
        navigation.links?.map((item) => {
          if (!item) return;
          const href = parseLinkHref(item as Link);
          return (
            <a
              href={href}
              class="
                  relative rounded-full 
                  border-2 border-transparent px-4 py-2 text-black 
                  transition-all 
                  hover:text-gray-700 
                  data-active:border-gray-200 data-active:text-accent-600 
                  hover:data-active:border-accent-600"
              data-active={pathname === href}
            >
              {item?.label}
            </a>
          );
        })
      }
    </div>
    <div class="-my-1 w-px self-stretch bg-gray-200"></div>
    <!-- <Dropdown.Toggle isShow={isShow} onClose={close} onToggle={toggle}>
      <button class="border-full relative flex flex-row items-center space-x-2 rounded-full px-4 py-2 text-black transition-all hover:bg-gray-200 data-show:bg-black data-show:text-white">
        <span>Connect</span>
        <i class="bx bx-chevron-down" />
        <Dropdown.List isShow={isShow}>
          <div class="absolute top-[140%] left-1/2 flex -translate-x-1/2 flex-col divide-y divide-gray-900 overflow-hidden rounded bg-gray-800 transition-all">
            {navigation.connect?.map((item) => (
              <Link key={item._key} to={item.url}>
                <p class="whitespace-nowrap p-2 px-4 text-left text-white hover:bg-gray-700">
                  {item.label}
                </p>
              </Link>
            ))}
          </div>
        </Dropdown.List>
      </button>
    </Dropdown.Toggle> -->
  </div>
  <p class="ml-4 text-white md:order-first">{navigation.heading}</p>
  <p class="mr-4 text-white">{navigation.subheading}</p>
</div>}
